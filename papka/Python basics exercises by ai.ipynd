Вот 15 задач для закрепления основ синтаксиса и работы с типами данных в Python. Каждая задача включает решение и три дополнительные задачи для практики.
Задача 1: Работа со строками
Задача: Создайте строку, которая содержит ваше имя и фамилию, а затем выведите её в верхнем регистре.
Решение:
python
name = "Иван Иванов"
print(name.upper())

Дополнительные задачи:
Создайте строку с названием вашего любимого фильма и выведите его в нижнем регистре.
Создайте строку с вашим городом и выведите длину этой строки.
Создайте строку с цитатой и замените одно слово на другое.
Задача 2: Сложение чисел
Задача: Напишите программу, которая складывает два числа и выводит результат.
Решение:
python
a = 5
b = 10
result = a + b
print(result)

Дополнительные задачи:
Напишите программу, которая вычитает одно число из другого.
Напишите программу, которая умножает два числа.
Напишите программу, которая делит одно число на другое и выводит результат.
Задача 3: Списки
Задача: Создайте список из пяти чисел и выведите третий элемент списка.
Решение:
python
numbers = [1, 2, 3, 4, 5]
print(numbers[2])

Дополнительные задачи:
Создайте список из ваших любимых фруктов и выведите последний элемент.
Измените второй элемент списка на новое значение.
Добавьте еще одно число в конец списка и выведите весь список.
Задача 4: Кортежи
Задача: Создайте кортеж из трех элементов и выведите его длину.
Решение:
python
my_tuple = (1, 2, 3)
print(len(my_tuple))

Дополнительные задачи:
Создайте кортеж из строковых значений и выведите первый элемент.
Попробуйте изменить один из элементов кортежа (что произойдет?).
Объедините два кортежа в один.
Задача 5: Множества
Задача: Создайте множество из трех чисел и добавьте еще одно число.
Решение:
python
my_set = {1, 2, 3}
my_set.add(4)
print(my_set)

Дополнительные задачи:
Удалите одно число из множества и выведите результат.
Проверьте, содержится ли число в множестве.
Объедините два множества.
Задача 6: Словари
Задача: Создайте словарь с именем человека и его возрастом, а затем выведите возраст.
Решение:
python
person = {"name": "Иван", "age": 30}
print(person["age"])

Дополнительные задачи:
Добавьте новый ключ "город" в словарь и выведите его значение.
Измените возраст на новое значение.
Удалите ключ "город" из словаря.
Задача 7: Индексация списков
Задача: Создайте список с именами и выведите все имена через цикл.
Решение:
python
names = ["Аня", "Борис", "Света"]
for name in names:
    print(name)

Дополнительные задачи:
Выведите имена с их индексами.
Выведите только те имена, которые начинаются на букву "А".
Выведите имена в обратном порядке.
Задача 8: Срезы строк
Задача: Создайте строку и выведите первые три символа.
Решение:
python
text = "Привет"
print(text[:3])

Дополнительные задачи:
Выведите последние два символа строки.
Выведите все символы строки, кроме первого.
Выведите строку в обратном порядке.
Задача 9: Проверка типов данных
Задача: Напишите программу, которая проверяет тип переменной и выводит его на экран.
Решение:
python
x = [1, 2, 3]
print(type(x))

Дополнительные задачи:
Проверьте тип переменной со строкой.
Проверьте тип переменной с числом.
Проверьте тип переменной с множеством.
Задача 10: Функции для работы со списками
Задача: Напишите функцию, которая принимает список и возвращает его длину.
Решение:
python
def list_length(lst):
    return len(lst)

my_list = [1, 2, 3]
print(list_length(my_list))

Дополнительные задачи:
Напишите функцию, которая принимает список чисел и возвращает их сумму.
Напишите функцию, которая принимает строку и возвращает количество гласных букв.
Напишите функцию, которая принимает кортеж и возвращает его первый элемент.
Задача 11: Объединение списков
Задача: Создайте два списка и объедините их в один.
Решение:
python
list1 = [1, 2]
list2 = [3, 4]
combined_list = list1 + list2
print(combined_list)

Дополнительные задачи:
Объедините три списка в один.
Скопируйте элементы одного списка в другой с помощью метода extend.
Используйте цикл для объединения двух списков поэлементно (например, [1, 'a', 2] + [2, 'b', 3] → [1, 'a', 2, 2, 'b', 3]).
Задача 12: Удаление элементов из списка
Задача: Удалите элемент по индексу из списка.
Решение:
python
my_list = [10, 20, 30]
del my_list[1]
print(my_list)

Дополнительные задачи:
Удалите элемент по значению (например, удалите число 10).
Очистите весь список с помощью метода clear().
Используйте метод pop() для удаления последнего элемента списка.
Задача 13: Словари с циклами
Задача: Создайте словарь с именами людей как ключи и их возрастами как значениями; затем выведите все пары ключ-значение через цикл.
Решение:
python
people = {"Иван": 30, "Аня": 25}
for name, age in people.items():
    print(f"{name}: {age}")

Дополнительные задачи:
Измените возраст одного из людей через цикл.
Добавьте нового человека в словарь через цикл (например, используя input()).
Выведите только имена людей старше определенного возраста (например, старше 25).
Задача 14: Поиск максимального значения в списке
Задача: Найдите максимальное значение в списке чисел.
Решение:
python
numbers = [5, 10, 15]
max_value = max(numbers)
print(max_value)

Дополнительные задачи:
Найдите минимальное значение в списке.
Найдите сумму всех значений в списке.
Найдите среднее значение чисел в списке.
Задача 15: Форматирование строк
Задача: Используя f-строки (f-strings), создайте строку с вашим именем и возрастом.
Решение:
python
name = "Иван"
age = 30
formatted_string = f"Меня зовут {name}, мне {age} лет."
print(formatted_string)

Дополнительные задачи:
Используйте f-строки для вывода информации о вашем городе и стране.
Создайте f-строку для вывода информации о вашем любимом фильме (название и год).
Используйте f-строки для форматирования числа с плавающей точкой до двух знаков после запятой.
Эти задачи помогут вам закрепить основные операции и методы работы с данными в Python!